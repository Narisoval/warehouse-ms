version: '3.8'

    
services:
  warehouse_api:
    image: warehouse
    depends_on:
      - warehouse_db
      - es01
    container_name: warehouse_api
    ports:
      - "8080:80"
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      - ConnectionStrings__postgres=User ID=postgres;Password=12345;Server=warehouse_db;Port=5432;Database=warehouse_development;
      - ElasticConfiguration__Uri=http://es01:9200
    networks:
      - api_network
      
  warehouse_db:
    image: postgres:15.2-alpine
    container_name: warehouse_db
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=12345
      - POSTGRES_DB=warehouse_development
    ports:
      - "5433:5432"
    restart: always
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - api_network
       
  es01:
    image: elasticsearch:8.6.2
    container_name: es01
    hostname: elasticsearch
    environment:
      - node.name=es01
      - cluster.name=es-docker-cluster
      - cluster.initial_master_nodes=es01
      - bootstrap.memory_lock=true
      - xpack.security.enabled=false
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - data01:/usr/share/elasticsearch/data
    ports:
      - "9200:9200"
    networks:
      - elastic_network
      - api_network
  
  kib01:
    image: kibana:8.6.2
    depends_on:
      - es01
    container_name: kib01
    ports:
      - 5601:5601
    environment:
      ELASTICSEARCH_URL: http://es01:9200
      ELASTICSEARCH_HOSTS: http://es01:9200
    networks:
      - elastic_network
    
volumes:
  postgres-data:
    driver: local
  data01:
    driver: local
    
networks:
  api_network:
    driver: bridge
  elastic_network:
    driver: bridge
